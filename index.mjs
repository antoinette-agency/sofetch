var d=class{errorHandlers={};beforeSendHandlers=[];onRequestCompleteHandlers=[];baseUrl="";addHTTPHandler(e,t){this.errorHandlers[e]||(this.errorHandlers[e]=[]),this.errorHandlers[e].push(t)}handleHttpError(e){let t=e.status,o=this.errorHandlers[t]&&this.errorHandlers[t].length;return o&&this.errorHandlers[t].forEach(s=>s(e)),o}setBasicAuthentication({username:e,password:t}){let s=`Basic ${btoa(`${e}:${t}`)}`;this.beforeSend(u=>{u.headers.Authorization=s})}setBearerToken(e){this.beforeSend(t=>{t.headers.Authorization=`Bearer ${e}`})}setHeaderApiKey({headerName:e,value:t}){this.beforeSend(o=>{o.headers[e]=t})}setQueryStringApiKey({paramName:e,value:t}){this.beforeSend(o=>{let s=new URL(o.url);s.searchParams.append(e,t),o.url=s.toString()})}beforeSend(e){this.beforeSendHandlers.push(e)}transformRequest(e){return this.beforeSendHandlers.forEach(t=>{e=t(e)||e}),e}onRequestComplete(e){this.onRequestCompleteHandlers.push(e)}};var h=class extends EventTarget{inner;errorHandlers={};beforeSendHandlers=[];beforeFetchSendHandlers=[];timeout=3e4;then;catch;finally;constructor(e){super(),this.inner=new Promise(e),this.then=this.inner.then.bind(this.inner),this.catch=this.inner.catch.bind(this.inner),this.finally=this.inner.finally.bind(this.inner)}onRequestComplete(e){return this.addEventListener("onRequestSuccess",t=>{e(t.detail)}),this}beforeSend(e){return this.beforeSendHandlers.push(e),this}beforeFetchSend(e){return this.beforeFetchSendHandlers.push(e),this}catchHTTP(e,t){return this.errorHandlers[e]||(this.errorHandlers[e]=[]),this.errorHandlers[e].push(t),this}handleHttpError(e){let t=e.status,o=this.errorHandlers[t]&&this.errorHandlers[t].length;return o&&this.errorHandlers[t].forEach(s=>s(e)),o}transformRequest(e){return this.beforeSendHandlers.forEach(t=>{e=t(e)||e}),e}transformInit(e){return this.beforeFetchSendHandlers.forEach(t=>{e=t(e)||e}),e}async setTimeout(e){return this.timeout=e,this}};function b(r){return new Promise(e=>setTimeout(e,r))}var T=r=>{let{isDefined:e,isArray:t,isFiles:o}=P(r);if(!e)return{};if(!o)return{jsonPayload:r};let s=t?r:[r];return{files:R(s[0])?s:s.map(((c,f)=>({file:c,fieldName:`file${f}`})))}},R=r=>"file"in r&&r.file instanceof File,P=r=>r?Array.isArray(r)?r.length?r[0]instanceof File?{isDefined:!0,isArray:!0,isFiles:!0}:R(r[0])?{isDefined:!0,isArray:!0,isFiles:!0}:{isDefined:!0,isArray:!0,isFiles:!1}:{isDefined:!1,isArray:!0,isFiles:!1}:r instanceof File?{isDefined:!0,isArray:!1,isFiles:!0}:R(r)?{isDefined:!0,isArray:!1,isFiles:!0}:{isDefined:!0,isArray:!1,isFiles:!1}:{isDefined:!1,isArray:!1,isFiles:!1};var a=(r,e,t,o)=>{let s=new h((u,c)=>{(async()=>{let n={url:e,method:r,body:t,headers:{}};n.url=!i.config.baseUrl||n.url.startsWith("http")?n.url:`${i.config.baseUrl}${n.url}`,await b(0),n=s.transformRequest(n),n=i.config.transformRequest(n);let{files:S,jsonPayload:E}=T(n.body),m=S?H(n,S):q(n);m=s.transformInit(m);let l=await Promise.race([fetch(n.url,m),new Promise((p,F)=>setTimeout(()=>F(new Error("SoFetch timed out")),s.timeout))]);if(i.verbose&&console.info(`SoFetch: ${m.method} ${l.status} ${n.url}`),s.dispatchEvent(new CustomEvent("onRequestSuccess",{detail:l})),i.config.onRequestCompleteHandlers.forEach(p=>{p(l)}),!l.ok){let p=s.handleHttpError(l),F=i.config.handleHttpError(l);if(!p&&!F)throw new Error(`Received response ${l.status} from URL ${l.url}`,{cause:l})}let y=await v(l);u(y)})().catch(f=>{c(f)})});return s},q=r=>{let{url:e,method:t,body:o}=r;return r.headers["content-type"]="application/json",{body:o?JSON.stringify(o):void 0,headers:r.headers,method:t,credentials:"include"}},H=(r,e)=>{let{method:t,headers:o}=r,s=new FormData;return e.forEach(c=>{s.append(c.fieldName,c.file,c.file.name)}),{body:s,headers:o,method:t,credentials:"include"}},v=async r=>{if(r.status===203)return;let e=await r.text();if(!e)return;let t=e;try{t=JSON.parse(e)}catch{}return t},i=((r,e,t)=>a(e?"POST":"GET",r,e));i.verbose=!1;i.config=i.config||new d;i.get=(r,e)=>a("GET",r,e);i.post=(r,e)=>a("POST",r,e);i.put=(r,e)=>a("PUT",r,e);i.patch=(r,e)=>a("PATCH",r,e);i.delete=(r,e)=>a("DELETE",r,e);i.instance=()=>{let r=((e,t,o)=>a(t?"POST":"GET",e,t));return r.get=(e,t)=>a("GET",e,t),r.post=(e,t)=>a("POST",e,t),r.put=(e,t)=>a("PUT",e,t),r.patch=(e,t)=>a("PATCH",e,t),r.delete=(e,t)=>a("DELETE",e,t),r.verbose=i.verbose,r.config=structuredClone(i.config),r};var g=i;var B=g;export{d as SoFetchConfig,h as SoFetchPromise,B as default};
//# sourceMappingURL=index.mjs.map
