var d=class{errorHandlers={};beforeSendHandlers=[];onRequestCompleteHandlers=[];baseUrl="";addHTTPHandler(e,r){this.errorHandlers[e]||(this.errorHandlers[e]=[]),this.errorHandlers[e].push(r)}handleHttpError(e){let r=e.status,s=this.errorHandlers[r]&&this.errorHandlers[r].length;return s&&this.errorHandlers[r].forEach(i=>i(e)),s}setBasicAuthentication({username:e,password:r}){let i=`Basic ${btoa(`${e}:${r}`)}`;this.beforeSend(u=>{u.headers.Authorization=i})}setBearerToken(e){this.beforeSend(r=>{r.headers.Authorization=`Bearer ${e}`})}setHeaderApiKey({headerName:e,value:r}){this.beforeSend(s=>{s.headers[e]=r})}setQueryStringApiKey({paramName:e,value:r}){this.beforeSend(s=>{let i=new URL(s.url);i.searchParams.append(e,r),s.url=i.toString()})}beforeSend(e){this.beforeSendHandlers.push(e)}transformRequest(e){return this.beforeSendHandlers.forEach(r=>{e=r(e)||e}),e}onRequestComplete(e){this.onRequestCompleteHandlers.push(e)}};var h=class extends EventTarget{inner;errorHandlers={};beforeSendHandlers=[];beforeFetchSendHandlers=[];timeout=3e4;then;catch;finally;constructor(e){super(),this.inner=new Promise(e),this.then=this.inner.then.bind(this.inner),this.catch=this.inner.catch.bind(this.inner),this.finally=this.inner.finally.bind(this.inner)}onRequestComplete(e){return this.addEventListener("onRequestSuccess",r=>{e(r.detail)}),this}beforeSend(e){return this.beforeSendHandlers.push(e),this}beforeFetchSend(e){return this.beforeFetchSendHandlers.push(e),this}catchHTTP(e,r){return this.errorHandlers[e]||(this.errorHandlers[e]=[]),this.errorHandlers[e].push(r),this}handleHttpError(e){let r=e.status,s=this.errorHandlers[r]&&this.errorHandlers[r].length;return s&&this.errorHandlers[r].forEach(i=>i(e)),s}transformRequest(e){return this.beforeSendHandlers.forEach(r=>{e=r(e)||e}),e}transformInit(e){return this.beforeFetchSendHandlers.forEach(r=>{e=r(e)||e}),e}async setTimeout(e){return this.timeout=e,this}};function S(t){return new Promise(e=>setTimeout(e,t))}var b=t=>{let{isDefined:e,isArray:r,isFiles:s}=P(t);if(!e)return{};if(!s)return{jsonPayload:t};let i=r?t:[t];return{files:F(i[0])?i:i.map(((c,o)=>({file:c,fieldName:`file${o}`})))}},F=t=>"file"in t&&t.file instanceof File,P=t=>t?Array.isArray(t)?t.length?t[0]instanceof File?{isDefined:!0,isArray:!0,isFiles:!0}:F(t[0])?{isDefined:!0,isArray:!0,isFiles:!0}:{isDefined:!0,isArray:!0,isFiles:!1}:{isDefined:!1,isArray:!0,isFiles:!1}:t instanceof File?{isDefined:!0,isArray:!1,isFiles:!0}:F(t)?{isDefined:!0,isArray:!1,isFiles:!0}:{isDefined:!0,isArray:!1,isFiles:!1}:{isDefined:!1,isArray:!1,isFiles:!1};var a=(t,e,r)=>{let s=new h((i,u)=>{(async()=>{let o={url:e,method:t,body:r,headers:{}};o.url=!n.config.baseUrl||o.url.startsWith("http")?o.url:`${n.config.baseUrl}${o.url}`,await S(0),o=s.transformRequest(o),o=n.config.transformRequest(o);let{files:R,jsonPayload:j}=b(o.body),f=R?v(o,R):y(o);f=s.transformInit(f);let q=new Date().getTime(),l=await Promise.race([fetch(o.url,f),new Promise((m,p)=>setTimeout(()=>p(new Error("SoFetch timed out")),s.timeout))]),H=new Date().getTime()-q;if(n.verbose&&console.info(`SoFetch: ${f.method} ${l.status} ${o.url}`),s.dispatchEvent(new CustomEvent("onRequestSuccess",{detail:l})),n.config.onRequestCompleteHandlers.forEach(m=>{m(l,{duration:H,method:o.method})}),!l.ok){let m=s.handleHttpError(l),p=n.config.handleHttpError(l);if(!m&&!p)throw new Error(`Received response ${l.status} from URL ${l.url}`,{cause:l})}let T=await E(l);i(T)})().catch(c=>{u(c)})});return s},y=t=>{let{url:e,method:r,body:s}=t;return t.headers["content-type"]="application/json",{body:s?JSON.stringify(s):void 0,headers:t.headers,method:r,credentials:"include"}},v=(t,e)=>{let{method:r,headers:s}=t,i=new FormData;return e.forEach(c=>{i.append(c.fieldName,c.file,c.file.name)}),{body:i,headers:s,method:r,credentials:"include"}},E=async t=>{if(t.status===203)return;let e=await t.text();if(!e)return;let r=e;try{r=JSON.parse(e)}catch{}return r},n=((t,e)=>a(e?"POST":"GET",t,e));n.verbose=!1;n.config=n.config||new d;n.get=(t,e)=>a("GET",t,e);n.post=(t,e)=>a("POST",t,e);n.put=(t,e)=>a("PUT",t,e);n.patch=(t,e)=>a("PATCH",t,e);n.delete=(t,e)=>a("DELETE",t,e);n.instance=()=>{let t=((e,r)=>a(r?"POST":"GET",e,r));return t.get=(e,r)=>a("GET",e,r),t.post=(e,r)=>a("POST",e,r),t.put=(e,r)=>a("PUT",e,r),t.patch=(e,r)=>a("PATCH",e,r),t.delete=(e,r)=>a("DELETE",e,r),t.verbose=n.verbose,t.config=new d,t.config.baseUrl=n.config.baseUrl,t.config.beforeSendHandlers=[...n.config.beforeSendHandlers],t.config.onRequestCompleteHandlers=[...n.config.onRequestCompleteHandlers],t};var g=n;var B=g;export{d as SoFetchConfig,h as SoFetchPromise,B as default};
//# sourceMappingURL=index.mjs.map
