var u=class{constructor(){this.errorHandlers={};this.beforeSendHandlers=[];this.onRequestCompleteHandlers=[];this.baseUrl=""}catchHTTP(e,r){this.errorHandlers[e]||(this.errorHandlers[e]=[]),this.errorHandlers[e].push(r)}setBasicAuthentication({username:e,password:r}){let o=`Basic ${btoa(`${e}:${r}`)}`;this.beforeSend(h=>{h.headers.Authorization=o})}setBearerToken(e){this.beforeSend(r=>{r.headers.Authorization=`Bearer ${e}`})}setHeaderApiKey({headerName:e,value:r}){this.beforeSend(s=>{s.headers[e]=r})}setQueryStringApiKey({paramName:e,value:r}){this.beforeSend(s=>{let o=new URL(s.url);o.searchParams.append(e,r),s.url=o.toString()})}beforeSend(e){this.beforeSendHandlers.push(e)}onRequestComplete(e){this.onRequestCompleteHandlers.push(e)}};var m=class{constructor(e){this.errorHandlers={};this.beforeSendHandlers=[];this.beforeFetchSendHandlers=[];this.onRequestCompleteHandlers=[];this.timeout=3e4;this.inner=new Promise(e),this.then=this.inner.then.bind(this.inner),this.catch=this.inner.catch.bind(this.inner),this.finally=this.inner.finally.bind(this.inner)}onRequestComplete(e){return this.onRequestCompleteHandlers.push(e),this}beforeSend(e){return this.beforeSendHandlers.push(e),this}beforeFetchSend(e){return this.beforeFetchSendHandlers.push(e),this}catchHTTP(e,r){return this.errorHandlers[e]||(this.errorHandlers[e]=[]),this.errorHandlers[e].push(r),this}async setTimeout(e){return this.timeout=e,this}};function q(t){return new Promise(e=>setTimeout(e,t))}var y=t=>{let{isDefined:e,isArray:r,isFiles:s}=E(t);if(!e)return{};if(!s)return{jsonPayload:t};let o=r?t:[t];return{files:R(o[0])?o:o.map(((n,d)=>({file:n,fieldName:`file${d}`})))}},R=t=>"file"in t&&t.file instanceof File,E=t=>t?Array.isArray(t)?t.length?t[0]instanceof File?{isDefined:!0,isArray:!0,isFiles:!0}:R(t[0])?{isDefined:!0,isArray:!0,isFiles:!0}:{isDefined:!0,isArray:!0,isFiles:!1}:{isDefined:!1,isArray:!0,isFiles:!1}:t instanceof File?{isDefined:!0,isArray:!1,isFiles:!0}:R(t)?{isDefined:!0,isArray:!1,isFiles:!0}:{isDefined:!0,isArray:!1,isFiles:!1}:{isDefined:!1,isArray:!1,isFiles:!1};var S=(t,e)=>{let r=t.status,s=!!(e[r]&&e[r].length);return s&&e[r].forEach(o=>o(t)),s};var g=(t,e)=>(e.forEach(r=>{t=r(t)||t}),t);var P=(t,e)=>(e.forEach(r=>{t=r(t)||t}),t);var v=async({url:t,method:e,body:r,config:s,promise:o})=>{let n={url:t,method:e,body:r,headers:{}};n.url=!s.baseUrl||n.url.startsWith("http")?n.url:`${s.baseUrl}${n.url}`,n=g(n,o.beforeSendHandlers),n=g(n,s.beforeSendHandlers);let{files:d,jsonPayload:p}=y(n.body),f=d?U(n,d):D(n);return f=P(f,o.beforeFetchSendHandlers),{init:f,finalUrl:n.url}},a=(t,e,r,s)=>{let o=new m((h,n)=>{(async()=>{await q(0);let{finalUrl:d,init:p}=await v({url:r,method:e,body:s,config:t,promise:o}),f=new Date().getTime(),l=await Promise.race([fetch(d,p),new Promise((c,F)=>setTimeout(()=>F(new Error("SoFetch timed out")),o.timeout))]),b=new Date().getTime()-f;if(i.verbose&&console.info(`SoFetch: ${e} ${l.status} ${d}`),o.onRequestCompleteHandlers.forEach(c=>{c(l,{duration:b,method:p.method||""})}),t.onRequestCompleteHandlers.forEach(c=>{c(l,{duration:b,method:p.method||""})}),!l.ok){let c=S(l,o.errorHandlers),F=!1;if(c||(F=S(l,t.errorHandlers)),!c&&!F)throw new Error(`Received response ${l.status} from URL ${l.url}`,{cause:l})}let H=await A(l);h(H)})().catch(d=>{n(d)})});return o},D=t=>{let{url:e,method:r,body:s}=t;return t.headers["content-type"]="application/json",{body:s?JSON.stringify(s):void 0,headers:t.headers,method:r,credentials:"include"}},U=(t,e)=>{let{method:r,headers:s}=t,o=new FormData;return e.forEach(n=>{o.append(n.fieldName,n.file,n.file.name)}),{body:o,headers:s,method:r,credentials:"include"}},A=async t=>{if(t.status===203)return;let e=await t.text();if(!e)return;let r=e;try{r=JSON.parse(e)}catch{}return r},i=((t,e)=>a(i.config||new u,e?"POST":"GET",t,e));i.verbose=!1;i.config=new u;i.get=t=>a(i.config,"GET",t);i.post=(t,e)=>a(i.config,"POST",t,e);i.put=(t,e)=>a(i.config,"PUT",t,e);i.patch=(t,e)=>a(i.config,"PATCH",t,e);i.delete=t=>a(i.config,"DELETE",t);i.instance=()=>{let t=new u;t.baseUrl=i.config.baseUrl,t.beforeSendHandlers=[...i.config.beforeSendHandlers],t.onRequestCompleteHandlers=[...i.config.onRequestCompleteHandlers];let e=((r,s)=>a(t,s?"POST":"GET",r,s));return e.get=(r,s)=>a(t,"GET",r,s),e.post=(r,s)=>a(t,"POST",r,s),e.put=(r,s)=>a(t,"PUT",r,s),e.patch=(r,s)=>a(t,"PATCH",r,s),e.delete=(r,s)=>a(t,"DELETE",r,s),e.verbose=i.verbose,e.config=t,e};var T=i;var M=T;export{u as SoFetchConfig,m as SoFetchPromise,M as default};
//# sourceMappingURL=index.mjs.map
