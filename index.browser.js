var q=Object.defineProperty;var H=(r,t,e)=>t in r?q(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var a=(r,t,e)=>H(r,typeof t!="symbol"?t+"":t,e);var h=class{constructor(){a(this,"errorHandlers",{});a(this,"beforeSendHandlers",[]);a(this,"baseUrl","")}addHTTPHandler(t,e){this.errorHandlers[t]||(this.errorHandlers[t]=[]),this.errorHandlers[t].push(e)}handleHttpError(t){let e=t.status,s=this.errorHandlers[e]&&this.errorHandlers[e].length;return s&&this.errorHandlers[e].forEach(i=>i(t)),s}setBasicAuthentication({username:t,password:e}){let i=`Basic ${btoa(`${t}:${e}`)}`;this.beforeSend(c=>{c.headers.Authorization=i})}setBearerToken(t){this.beforeSend(e=>{e.headers.Authorization=`Bearer ${t}`})}setHeaderApiKey({headerName:t,value:e}){this.beforeSend(s=>{s.headers[t]=e})}setQueryStringApiKey({paramName:t,value:e}){this.beforeSend(s=>{let i=new URL(s.url);i.searchParams.append(t,e),s.url=i.toString()})}beforeSend(t){this.beforeSendHandlers.push(t)}transformRequest(t){return this.beforeSendHandlers.forEach(e=>{t=e(t)||t}),t}};var f=class extends EventTarget{constructor(e){super();a(this,"inner");a(this,"errorHandlers",{});a(this,"beforeSendHandlers",[]);a(this,"beforeFetchSendHandlers",[]);a(this,"timeout",3e4);a(this,"then");a(this,"catch");a(this,"finally");this.inner=new Promise(e),this.then=this.inner.then.bind(this.inner),this.catch=this.inner.catch.bind(this.inner),this.finally=this.inner.finally.bind(this.inner)}onRequestComplete(e){return this.addEventListener("onRequestSuccess",s=>{e(s.detail)}),this}beforeSend(e){return this.beforeSendHandlers.push(e),this}beforeFetchSend(e){return this.beforeFetchSendHandlers.push(e),this}catchHTTP(e,s){return this.errorHandlers[e]||(this.errorHandlers[e]=[]),this.errorHandlers[e].push(s),this}handleHttpError(e){let s=e.status,i=this.errorHandlers[s]&&this.errorHandlers[s].length;return i&&this.errorHandlers[s].forEach(c=>c(e)),i}transformRequest(e){return this.beforeSendHandlers.forEach(s=>{e=s(e)||e}),e}transformInit(e){return this.beforeFetchSendHandlers.forEach(s=>{e=s(e)||e}),e}async setTimeout(e){return this.timeout=e,this}};function T(r){return new Promise(t=>setTimeout(t,r))}var y=r=>{let{isDefined:t,isArray:e,isFiles:s}=v(r);if(!t)return{};if(!s)return{jsonPayload:r};let i=e?r:[r];return{files:S(i[0])?i:i.map(((d,m)=>({file:d,fieldName:`file${m}`})))}},S=r=>"file"in r&&r.file instanceof File,v=r=>r?Array.isArray(r)?r.length?r[0]instanceof File?{isDefined:!0,isArray:!0,isFiles:!0}:S(r[0])?{isDefined:!0,isArray:!0,isFiles:!0}:{isDefined:!0,isArray:!0,isFiles:!1}:{isDefined:!1,isArray:!0,isFiles:!1}:r instanceof File?{isDefined:!0,isArray:!1,isFiles:!0}:S(r)?{isDefined:!0,isArray:!1,isFiles:!0}:{isDefined:!0,isArray:!1,isFiles:!1}:{isDefined:!1,isArray:!1,isFiles:!1};var u=(r,t,e,s)=>{let i=new f((c,d)=>{(async()=>{let n={url:t,method:r,body:e,headers:{}};n.url=!o.config.baseUrl||n.url.startsWith("http")?n.url:`${o.config.baseUrl}${n.url}`,await T(0),n=i.transformRequest(n),n=o.config.transformRequest(n);let{files:R,jsonPayload:w}=y(n.body),p=R?j(n,R):E(n);p=i.transformInit(p);let l=await Promise.race([fetch(n.url,p),new Promise((b,F)=>setTimeout(()=>F(new Error("SoFetch timed out")),i.timeout))]);if(o.verbose&&console.info(`SoFetch: ${p.method} ${l.status} ${n.url}`),i.dispatchEvent(new CustomEvent("onRequestSuccess",{detail:l})),!l.ok){let b=i.handleHttpError(l),F=o.config.handleHttpError(l);if(!b&&!F)throw new Error(`Received response ${l.status} from URL ${l.url}`,{cause:l})}let P=await A(l);c(P)})().catch(m=>{d(m)})});return i},E=r=>{let{url:t,method:e,body:s}=r;return r.headers["content-type"]="application/json",{body:s?JSON.stringify(s):void 0,headers:r.headers,method:e,credentials:"include"}},j=(r,t)=>{let{method:e,headers:s}=r,i=new FormData;return t.forEach(d=>{i.append(d.fieldName,d.file,d.file.name)}),{body:i,headers:s,method:e,credentials:"include"}},A=async r=>{if(r.status===203)return;let t=await r.text();if(!t)return;let e=t;try{e=JSON.parse(t)}catch(s){}return e},o=((r,t,e)=>u(t?"POST":"GET",r,t));o.verbose=!1;o.config=o.config||new h;o.get=(r,t)=>u("GET",r,t);o.post=(r,t)=>u("POST",r,t);o.put=(r,t)=>u("PUT",r,t);o.patch=(r,t)=>u("PATCH",r,t);o.delete=(r,t)=>u("DELETE",r,t);var g=o;var V=g;export{h as SoFetchConfig,f as SoFetchPromise,V as default};
//# sourceMappingURL=index.browser.js.map
